test   : Id
(   : LParen
)   : RParen
{   : LBrace
x   : Id
=   : Assign
20   : Int
;   : Semicolon
y   : Id
=   : Assign
30   : Int
;   : Semicolon
if   : Keyword_if
(   : LParen
(   : LParen
x   : Id
+   : Plus
y   : Id
)   : RParen
<   : Lt
50   : Int
)   : RParen
{   : LBrace
print   : Keyword_print
(   : LParen
confirmMessage   : Id
)   : RParen
;   : Semicolon
}   : RBrace
else   : Keyword_else
{   : LBrace
z   : Id
=   : Assign
x   : Id
+   : Plus
y   : Id
;   : Semicolon
while   : Keyword_while
(   : LParen
(   : LParen
z   : Id
/   : Div
10   : Int
)   : RParen
>=   : Ge
50   : Int
)   : RParen
{   : LBrace
temp   : Id
=   : Assign
z   : Id
+   : Plus
abc   : Id
;   : Semicolon
Etemp   : Id
=   : Assign
temp   : Id
+   : Plus
2.198E-10   : FloatE
;   : Semicolon
result   : Id
=   : Assign
(   : LParen
Etemp   : Id
-   : Minus
z   : Id
*   : Times
if5   : Id
)   : RParen
? : Lexical Error, invalid token
this   : Id
:   : Colon
that   : Id
;   : Semicolon
if   : Keyword_if
(   : LParen
result   : Id
==   : Eq
this   : Id
||   : Or
z   : Id
>   : Gt
500   : Int
)   : RParen
print   : Keyword_print
(   : LParen
temp   : Id
)   : RParen
;   : Semicolon
else   : Keyword_else
print   : Keyword_print
(   : LParen
case   : Keyword_case
)   : RParen
;   : Semicolon
}   : RBrace
do   : Keyword_do
{   : LBrace
switch   : Keyword_switch
(   : LParen
teehee   : Id
)   : RParen
{   : LBrace
case   : Keyword_case
1   : Int
:   : Colon
return   : Id
false   : Keyword_false
;   : Semicolon
case   : Keyword_case
2   : Int
:   : Colon
return   : Id
true   : Keyword_true
;   : Semicolon
default   : Keyword_default
:   : Colon
woohoo   : Id
=   : Assign
false   : Keyword_false
;   : Semicolon
for   : Keyword_for
(   : LParen
i   : Id
=   : Assign
0   : Int
;   : Semicolon
i   : Id
<   : Lt
10   : Int
;   : Semicolon
i   : Id
=   : Assign
i   : Id
+   : Plus
1   : Int
)   : RParen
print   : Keyword_print
(   : LParen
!   : Inv
woohoo   : Id
)   : RParen
;   : Semicolon
}   : RBrace
}   : RBrace
while   : Keyword_while
(   : LParen
omg   : Id
>=   : Ge
pickles222   : Id
*   : Times
20   : Int
)   : RParen
;   : Semicolon
}   : RBrace
